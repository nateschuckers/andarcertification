import { useState, useEffect } from 'react';
import { db } from '../firebase/config';
import { doc, onSnapshot } from 'firebase/firestore';

// FIX: Changed back to a named export to match the project's convention
export const useDocument = (collectionName, id) => {
    const [document, setDocument] = useState(null);
    const [error, setError] = useState(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        if (!id) {
            setLoading(false);
            setDocument(null);
            return;
        }

        const docRef = doc(db, collectionName, id);

        const unsubscribe = onSnapshot(docRef, (snapshot) => {
            if (snapshot.exists()) {
                setDocument({ id: snapshot.id, ...snapshot.data() });
                setError(null);
            } else {
                setDocument(null);
                setError(`Document does not exist in collection: ${collectionName}`);
            }
            setLoading(false);
        }, (err) => {
            console.error(err.message);
            setError('Failed to get document');
            setLoading(false);
        });

        // Unsubscribe on unmount
        return () => unsubscribe();

    }, [collectionName, id]);

    return { document, error, loading };
};

